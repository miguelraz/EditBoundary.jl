
    """
        triangle_areas(Ω)

    Compute the areas of triangles generated by three consecutive vertices
    of a simple-connected polygon.
    """
    function triangle_areas(Ω::Matrix{Float64})::Vector{Float64}

        nΩ = size(Ω,1)
        αvec = zeros(nΩ)
        for k = 1:nΩ
            k₋ = isone(k)  ? nΩ : k-1 
            k₊ = (k == nΩ) ? 1  : k+1
            αvec[k] = 0.5α(Ω,k₋,k,k₊)
        end
        return αvec
    end

    """
        αvec = triangle_areas(R)

    Compute the areas of triangles generated by three consecutive vertices
    of a polygonal region.
    """
    function triangle_areas(R::DataRegion)::Vector{Float64}
        αvec = triangle_areas(R.E)
        if ~isempty(R.H)
            for k in keys(R.H)
                αvec = vcat(αvec,triangle_areas(R.H[k]))
            end
        end
        return αvec
    end

    function triangle_areas_scaled(Ω::Matrix{Float64})::Vector{Float64}
        
        αvec = abs.(triangle_areas(Ω))
        ᾱ    = sum(αvec)/length(αvec)
        return αvec./ᾱ
    end

    """
    αvec == triangle_areas_sorted(R)

    Compute the areas of triangles generated by three consecutive vertices
    of a polygonal region.

    The areas are scaled so that their average is equal to one.
    """
    function triangle_areas_sorted(R::DataRegion)::Vector{Float64}
        αvec = abs.(triangle_areas(R))
        # average area of the triangles
        ᾱ  = sum(αvec)/length(αvec)
        # sorting
        sort!(αvec,rev=true)
        # scaling
        αvec ./= ᾱ
        αvec ./= αvec[1]
        return αvec
    end